apply plugin: 'com.android.library'
apply plugin: 'checkstyle'
apply plugin: 'com.neenbedankt.android-apt'

dependencies {
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'

    androidTestCompile 'com.squareup:fest-android:1.0.8@aar'
    androidTestCompile 'org.easytesting:fest-assert-core:2.0M10'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.crittercism.dexmaker:dexmaker:1.4'
    androidTestCompile 'com.crittercism.dexmaker:dexmaker-dx:1.4'
    androidTestCompile 'com.crittercism.dexmaker:dexmaker-mockito:1.4'

    androidTestCompile('com.squareup.okhttp3:mockwebserver:3.3.0') {
        exclude group: 'com.squareup.okhttp3'
        exclude group: 'junit'
    }
    androidTestCompile('com.android.support:multidex:1.0.1')
    androidTestCompile('com.android.support:multidex-instrumentation:1.0.1') {
        exclude group: 'com.android.support', module: 'multidex'
    }
    androidTestApt 'com.google.dagger:dagger-compiler:2.4'
    androidTestCompile('com.google.dagger:dagger:2.4') {
        exclude group: 'javax.annotation'
    }

    androidTestCompile('com.squareup.retrofit2:retrofit-mock:2.1.0')

    compile 'net.danlew:android.joda:2.7.2'

    compile 'com.google.code.gson:gson:2.7'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    apt 'com.google.dagger:dagger-compiler:2.4'
    compile('com.google.dagger:dagger:2.4') {
        exclude group: 'javax.annotation'
    }
    provided 'javax.annotation:jsr250-api:1.0'

    apt "org.projectlombok:lombok:1.16.2"
    provided "org.projectlombok:lombok:1.16.2"

    compile 'ch.hsr:geohash:1.3.0'
    provided 'com.google.android.gms:play-services-location:10.0.1'
}

def resolverURL = System.getenv("RESOLVER_URL") ?: project.ext.has("resolver_url") ? project.ext.get("resolver_url"): null

if (resolverURL != null) {
    println("using custom resolver: ${resolverURL}")
}

android {
    buildToolsVersion project.ext.buildToolsVersion
    compileSdkVersion project.ext.compileSdkVersion
    defaultConfig {
        versionCode 13
        versionName version
        minSdkVersion 9
        targetSdkVersion project.ext.targetSdkVersion
        buildConfigField "String", "SDK_VERSION", "\"" + project.ext.SDK_VERSION + "\""
        buildConfigField "String", "SDK_GIT_SHA1", gitSha1()
        consumerProguardFiles 'proguard-proguarded.txt'
		testInstrumentationRunner "com.sensorberg.sdk.test.SensorbergTestRunner"
    }
    lintOptions {
        disable 'InvalidPackage', 'CommitPrefEdits', 'DefaultLocale', 'SameParameterValue'
        abortOnError false

    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            buildConfigField "String", "RESOLVER_URL", resolverURL ? wrapInQuotes(resolverURL) : "null"
        }
        release {
            testCoverageEnabled false
        }
    }
}

checkstyle {
    configFile project.file('checkstyle.xml')
    showViolations true
}

def wrapInQuotes(String wrapMe) {
    return "\"" + wrapMe + "\"";
}

def gitSha1() {
    final def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    final String output = stdout.toString().trim();
    return wrapInQuotes(output);
}

apply from: 'https://raw.githubusercontent.com/sensorberg-dev/gradle-bintray-push/master/gradle-bintray-push.gradle'
